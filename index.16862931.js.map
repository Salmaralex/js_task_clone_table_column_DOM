{"mappings":"ACEA,SAAS,EAAgB,CAAO,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAW,EAAG,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAY,EAIpD,EAAM,AAHC,EACV,oBAAoB,CAAC,EAAQ,CAAC,EAAE,CAChC,oBAAoB,CAAC,KACR,CAAC,EAAS,CAGpB,EAAa,MAAM,IAAI,CAFf,EAAI,QAAQ,EAIpB,EAAU,CAAU,CAAC,EAAU,CAAC,SAAS,CAAC,CAAA,GAEhD,EAAW,MAAM,CAAC,EAAW,MAAM,CAAG,EAAG,EAAG,GAE5C,EAAI,SAAS,CAAG,GAChB,EAAW,OAAO,CAAC,SAAC,CAApB,EAA6B,OAAA,EAAI,WAAW,CAAC,E,EAC/C,CAEA,IAAM,EAAQ,SAAS,oBAAoB,CAAC,QAAQ,CAAC,EAAE,CAEvD,EAAgB,SAIhB,IAAK,IAFC,EAAO,EAAM,oBAAoB,CAAC,QAAQ,CAAC,EAAE,CAAC,oBAAoB,CAAC,MAEhE,EAAI,EAAG,EAAI,EAAK,MAAM,CAAE,IAC/B,EAAgB,QAAS,GAG3B,EAAgB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction duplicateColumn(section) {\n    var rowIndex = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, cellIndex = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;\n    var rows = table.getElementsByTagName(section)[0].getElementsByTagName(\"tr\");\n    var row = rows[rowIndex];\n    var cells = row.children;\n    var cellsArray = Array.from(cells);\n    var newCell = cellsArray[cellIndex].cloneNode(true);\n    cellsArray.splice(cellsArray.length - 1, 0, newCell);\n    row.innerHTML = \"\";\n    cellsArray.forEach(function(cell) {\n        return row.appendChild(cell);\n    });\n}\nvar table = document.getElementsByTagName(\"table\")[0];\nduplicateColumn(\"thead\");\nvar body = table.getElementsByTagName(\"tbody\")[0].getElementsByTagName(\"tr\");\nfor(var i = 0; i < body.length; i++)duplicateColumn(\"tbody\", i);\nduplicateColumn(\"tfoot\");\n\n//# sourceMappingURL=index.16862931.js.map\n","'use strict';\n\nfunction duplicateColumn(section, rowIndex = 0, cellIndex = 1) {\n  const rows = table\n    .getElementsByTagName(section)[0]\n    .getElementsByTagName('tr');\n  const row = rows[rowIndex];\n  const cells = row.children;\n\n  const cellsArray = Array.from(cells);\n\n  const newCell = cellsArray[cellIndex].cloneNode(true);\n\n  cellsArray.splice(cellsArray.length - 1, 0, newCell);\n\n  row.innerHTML = '';\n  cellsArray.forEach((cell) => row.appendChild(cell));\n}\n\nconst table = document.getElementsByTagName('table')[0];\n\nduplicateColumn('thead');\n\nconst body = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');\n\nfor (let i = 0; i < body.length; i++) {\n  duplicateColumn('tbody', i);\n}\n\nduplicateColumn('tfoot');\n"],"names":["duplicateColumn","section","rowIndex","arguments","length","cellIndex","row","rows","table","getElementsByTagName","cellsArray","Array","from","children","newCell","cloneNode","splice","innerHTML","forEach","cell","appendChild","document","body","i"],"version":3,"file":"index.16862931.js.map"}